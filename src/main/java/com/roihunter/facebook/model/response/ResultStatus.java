package com.roihunter.facebook.model.response;

import java.io.IOException;
import java.util.Properties;

public enum ResultStatus {
	SUCCESS(0, "success"),
	UNKNOWN(1, "unknown.error"),
	ENCRYPTION_ERROR(2, "encryption.error"),
	AUTHENTICATION_FAILURE(2001, "user.not.authenticated"),
	AUTHENTICATION_INVALID_CREDENTIALS(2008, "user.not.authenticated"),
	AUTHORIZATION_PROTECTED_ROUTE_EXCEPTION(2002, "user.not.authorized"),
	AUTHORIZATION_EXCEPTION(2009, "user.not.authorized"),
	AUTHORIZATION_HAS_PASSWORD_EXCEPTION(2007, "user.has.password"),
	BAD_REQUEST(2003, "bad.request"),
	FAILURE(1000, "failure"),
	REGISTRATION_INVALID_STEP(1001, "core.registration.invalid.step"),
	NOT_INDIVIDUAL_CUSTOMER(1002, "corecustomer.account.is.not.individual"),
	REGISTRATION_INVALID_SMS_TOKEN(1003, "core.registration.invalid.sms.token"),
	INVALID_PASSCODE(1005, "core.current.passcode.is.not.correct"),
	INVALID_MEMORABLE_WORD(1006, "core.memorable.word.is.not.acceptable"),
	SWITCH_FAILURE(1007, "switch.internal.error"),
	DATABASE_EXCEPTION(1008, "database.error"),
	INVALID_BANK_CODE(1009, "unrecognized.bank.code"),
	USER_NOT_FOUND(1010, "user.not.found"),
	REGISTRATION_DATE_EXPIRED(1011, "core.registration.date.is.expired"),
	SEND_SMS_FAILURE(1012, "send.sms.failure"),
	INVALID_USER_DATA(1013, "core.confirmed.user.data.is.not.valid"),
	INVALID_BUSINESS_CODE(1014, "core.business.code.is.not.valid"),
	SMS_CONNECTION_TIMEOUT(1015, "core.sms.connection.failure"),
	END_POINT_TIMEOUT(1016, "endpoint.connection.failure"),
	MONGO_DB_TIMEOUT(1017, "db.connection.failure"),
	MQ_EXCEPTION(1018, "mq.failure"),
	USER_LINKED_TO_CELL_PHONE(1019, "core.user.cannot.bind.to.other.cellphone"),
	CELL_LINKED_TO_OTHER_USER(1020, "core.cell.linked.to.other.user"),
	USER_IS_NOT_UNLINKED(1021, "core.user.not.unlinked"),
	DESTINATION_IS_NOT_ACTIVATED(1022, "core.destination.is.not.activated"),
	USER_IS_NOT_DELEGATED(1023, "core.user.is.not.delegated"),
	AMOUNT_IS_NOT_IN_RANGE(1024, "core.amount.is.not.in.range"),
	NATIONAL_CODE_NOT_BELONGS_TO_ACCOUNT(1025, "core.nation.code.not.belongs.to.account"),
	ACCOUNT_NOT_FOUND(1026, "core.account.not.found"),
	DEVICE_ID_NOT_FOUND(1027, "core.device.id.not.found"),
	IMAGE_SIZE_LIMIT_EXCEEDED(1028, "core.image.size.limit.exceeded"),
	INVALID_EMAIL(1029, "core.email.is.invalid"),
	OUT_OF_DATE_APP_VERSION(2004, "core.app.should.update"),
	PURCHASE_ALREADY_SENT_TO_PSP(1034, "purchase.already.sent.to.psp"),
	FUND_NOT_ELIGIBLE_TO_CANCEL(1035, ""),
	MERCHANT_REQUEST_TIMEOUT(1037, "core.merchant.request.timeout"),
	INVALID_PSP_RESPONSE_CODE(1038, "core.invalid.psp.response.code"),
	FIN_OPS_NOT_FOUND(1039, "core.fin.ops.not.found"),
	INVALID_IBAN_NUMBER(1040, "invalid.iban.number"),
	INVALID_CARD_NUMBER(1041, "invalid.card.number"),
	PAYMENT_NOT_FOUND(1042, "core.payment.not.found"),
	MESSAGE_LENGTH_LIMIT_EXCEEDED(1043, "core.message.length.limit.exceede"),
	PRE_LOGIN_AUTHORIZATION_FAILURE(1044, "core.pre.login.authorization.failure"),
	INVALID_MEMORABLE_SIZE(1045, "core.invalid.memorable.size"),
	MERCHANT_IS_NOT_ACTIVE(1046, "core.deactivated.merchant"),
	CUSTOMER_PAY_AMOUNT_MAX_EXCEEDED(1047, "core.customer.pay.amount.max.exceeded"),
	ONLINE_CUSTOMER_NOT_FOUND(1048, "core.online.customer.not.found"),
	BLOCKED_IDP_USER(2004, "core.idp.user.has.been.locked"),
	INVALID_FUND_STATUS_EXCEPTION(1050, "core.invalid.fund.status"),
	INVALID_CELL_NUMBER(1051, "core.invalid.cell.number"),
	CELL_NUMBER_ALREADY_REGISTERED(1052, "core.cell.number.already.registered"),
	USER_ACTIVATION_EXCEPTION(1053, "core.user.activation.exception"),
	INVALID_PARAMETER(1054, "core.invalid.parameter.exception"),
	INVALID_NATIONAL_CODE(1055, "core.invalid.nationalCode"),
	INVALID_PASSWORD(1056, "core.invalid.password"),
	OUT_OF_DATE_TAC_ACCEPTED_VERSION(2005, "core.out.of.date.tac.accepted.version"),
	OUT_OF_DATE_PASSWORD(2006, "core.out.of.date.pass"),
	CUSTOMER_PAY_REQ_MAX_EXCEEDED(1059, "core.customer.pay.req.max.exceeded"),
	INVALID_INDV_MERCHANT_STATUS(1060, "invalid.indv.merchant.status"),
	USER_REGISTRATION_MAX_EXCEEDED(1061, "core.user.reg.max.exceeded"),
	BILL_NOT_FOUND(1062, "core.bill.not.found"),
	INVALID_UTILITY_BILL(1063, "core.invalid.utility.bill"),
	TOP_UP_NOT_FOUND(1064, "core.top.up.not.found"),
	IBAN_NOT_FOUND(1065, "core.iban.not.found"),
	PAY_IS_DISABLED(1066, "core.pay.is.disabled"),
	INVALID_PUSH_NOTIF_ID(1070, "unknown.error"),
	SERVICE_PROVIDER_EXCEPTION(1100, "core.service.provider.exception"),
	ROLE_NOT_FOUND(1101, "role.not.found"),
	PERMISSION_NOT_FOUND(1102, "permission.not.found"),
	FEATURE_NOT_FOUND(1103, "feature.not.found"),
	INVALID_CARD(1105, "invalid.card"),
	INVALID_CARD_PAN(1106, "invalid.card.pan"),
	USER_SEND_SMS_MAX_EXCEEDED(1107, "send.sms.max.exceeded"),
	INSUFFICIENT_AMOUNT(1108, "insufficient.amount"),
	WALLET_IS_UNAVAILABLE(1109, "wallet.is.unavailable"),
	PSP_UNKNOWN_ERROR(1109, "psp.generic.error"),
	CREDITOR_DEBTOR_EQUAL(1110, "creditor.debtor.equal"),
	ENDOFDAY_ERROR(1111, "endofday.error"),
	SETTINGS_UPDATE_FAILED(1112, "purchase.settings.update.failed"),
	PSPPROXY_PSP_UNKNOWN_ERROR(6001, "pspproxy.generic.error"),
	PSPPROXY_GENERIC_ERROR(6002, "pspproxy.generic.error"),
	PSPPROXY_DIGITAL_SIGNATURE_INVALID(6003, "pspproxy.generic.error"),
	PSPPROXY_SERVER_ERROR(6004, "pspproxy.server.error"),
	PSPPROXY_CARD_INVALID(6010, "pspproxy.card.invalid"),
	PSPPROXY_CARD_INACTIVE(6011, "pspproxy.card.inactive"),
	PSPPROXY_CARD_NOT_FOUND(6012, "pspproxy.card.not-found"),
	PSPPROXY_TRANSACTION_INVALID(6020, "pspproxy.transaction.invalid"),
	PSPPROXY_TRANSACTION_REJECTED(6021, "pspproxy.transaction.rejected"),
	PSPPROXY_TRANSACTION_VALUE_MAX(6022, "pspproxy.transaction.max-value"),
	PSPPROXY_TRANSACTION_NOT_FOUND(6023, "pspproxy.transaction.not-found"),
	PSPPROXY_TRANSACTION_DUPLICATE(6024, "pspproxy.transaction.duplicate"),
	PSPPROXY_AMOUNT_INVALID(6030, "pspproxy.amount.invalid"),
	PSPPROXY_AMOUNT_LESS_THAN_MIN(6031, "pspproxy.amount.ltmin"),
	PSPPROXY_AMOUNT_INCOMPATIBLE(6032, "pspproxy.amount.incompatible"),
	PSPPROXY_AMOUNT_INSUFFICIENT(6033, "pspproxy.amount.insufficient"),
	PSPPROXY_PAN_INVALID(6040, "pspproxy.pan.invalid"),
	PSPPROXY_CELLNUMBER_INVALID(6041, "pspproxy.cellnumber.invalid"),
	PSPPROXY_PASSWORD_INVALID(6050, "pspproxy.password.invalid"),
	PSPPROXY_PIN2_INVALID(6051, "pspproxy.pin2.invalid"),
	PSPPROXY_PASS_ATTEMPT_REACHED(6052, "pspproxy.pass-attempt.reached"),
	PSPPROXY_PASS_ATTEMPT_WARN(6053, "pspproxy.pass-attempt.warn"),
	PSPPROXY_CCV2_INVALID(6054, "pspproxy.ccv2.invalid"),
	PSPPROXY_CREDIT_NOT_ENOUGHT(6060, "pspproxy.credit.not-enough"),
	PSPPROXY_ACCOUNT_NOT_FOUND(6061, "pspproxy.account.not-found"),
	PSPPROXY_ACCOUNT_EXPIRED(6062, "pspproxy.account.expired"),
	PSPPROXY_BILLID_INVALID(6070, "pspproxy.billid.invalid"),
	PSPPROXY_PAYID_INVALID(6071, "pspproxy.payid.invalid"),
	PSPPROXY_CHARGE_TYPE_INVALID(6072, "pspproxy.charge-type.invalid"),
	PSPPROXY_OPERATOR_INVALID(6073, "pspproxy.operator.invalid"),
	PSPPROXY_TOPUP_VENDOR_ERROR(6074, "pspproxy.topup-vendor.invalid"),
	PSPPROXY_BILL_DUPLICATE(6075, "pspproxy.bill.duplicate"),
	PSPPROXY_FAILED_OPERATION(6076, "pspproxy.failed.operation"),
	PSPPROXY_ACCESS_ERROR(6080, "pspproxy.access.error"),
	PSPPROXY_MANDATORY_FIELD_MISSING(6081, "pspproxy.mandatory-field.missing"),
	PSPPROXY_PAYMENT_ERROR(6082, "pspproxy.payment.error"),
	PSPPROXY_RECIPIENT_INVALID(6083, "pspproxy.recipient.invalid"),
	PSPPROXY_ORDER_ID_INVALID(6082, "pspproxy.order.invalid"),
	PSPPROXY_REDIRECT_URL_INVALID(6083, "pspproxy.redirect-url.invalid"),
	PSPPROXY_CONNECT_ERROR(6084, "pspproxy.connect.error"),
	PSPPROXY_PIN2_TRIES_Exceeded(6085, "pspproxy.pin2.tries.exceeded"),
	PSPPROXY_CHANNEL_INVALID(6086, "pspproxy.channel.invalid"),
	PSPPROXY_TOKEN_INVALID(6087, "pspproxy.token.invalid"),
	PSPPROXY_GOODS_CODE_INVALID(6088, "pspproxy.goods.code.invalid"),
	PSPPROXY_TERMINAL_INVALID(6089, "pspproxy.terminal.invalid"),
	PSPPROXY_PARAM_INVALID(6090, "pspproxy.param.invalid"),
	PSPPROXY_REFERENCE_INVALID(6091, "pspproxy.reference.invalid"),
	PSPPROXY_SWITCH_ERROR(6092, "pspproxy.switch.error"),
	PSPPROXY_TIMEOUT_ERROR(6093, "pspproxy.timeout.error"),
	PSPPROXY_ALREADY_CONFIRMED(6094, "pspproxy.already.confirmed"),
	PSPPROXY_ORDER_ID_DUPLICATE(6095, "pspproxy.order.duplicate"),
	PSPPROXY_BAD_RESPONSE(6096, "pspproxy.bad.response"),
	PSPPROXY_REFUND_AMOUNT_EXCEEDED(6097, "pspproxy.refund.amount.exceeded"),
	PSPPROXY_BANK_ERROR(6098, "pspproxy.bank.error"),
	PSPPROXY_BANK_ACCESS_ERROR(6099, "pspproxy.bank.access.error"),
	PSPPROXY_REGISTER_REFUND_ALREADY_EXISTS(6100, "pspproxy.register.refund.already.exists"),
	PSPPROXY_REFUND_ALREADY_EXISTS(6101, "pspproxy.refund.already.exists"),
	PSPPROXY_TRANSACTION_REQUEST_EXCEEDED(6102, "pspproxy.transaction.request.exceeded"),
	PSPPROXY_PSP_SERVER_ERROR(6103, "pspproxy.psp.server.error"),
	PSPPROXY_INVALID_TARGET(6104, "pspproxy.invalid.target"),
	PSPPROXY_OPERATION_EXPIRED(6105, "pspproxy.operation.expired"),
	PSPPROXY_ERROR_OPERATOR(6106, "pspproxy.error.operator"),
	PSPPROXY_INVALID_BILL_TYPE(6107, "pspproxy.invalid.bill.type"),
	PSPPROXY_CHARGE_SOLD(6108, "pspproxy.charge.sold"),
	PSPPROXY_CHARGE_NOT_FOUND(6109, "pspproxy.charge.not.found"),
	PSPPROXY_COMPANY_INVALID(6110, "pspproxy.company.invalid"),
	PSPPROXY_BILL_PAY_INVALID(6111, "pspproxy.bill.pay.invalid"),
	PSPPROXY_EXPIRE_DATE_INVALID(6112, "pspproxy.expire-date.invalid"),
	PSPPROXY_ERROR_CONCURRENCY(6113, "pspproxy.error.concurrency"),
	PSPPROXY_PIN2_EXPIRED(6114, "pspproxy.pin2.expired"),
	PSPPROXY_TRANSACTION_FAILED(6115, "pspproxy.transaction.failed"),
	PSPPROXY_PSP_NOT_AVAILABLE(6116, "pspproxy.psp.notavailable"),
	REFUND_INTERNAL_ERROR(6300, "refund.internal.error"),
	REFUND_LOCK_ERROR(6301, "refund.lock.error"),
	REFUND_ACTION_STATE_INVALID(6302, "refund.action.state.invalid"),
	REFUND_START_DATE_INVALID(6303, "refund.start.date.invalid"),
	REFUND_PSP_CONSTRAINT_INVALID(6304, "refund.psp.constraint.invalid"),
	REFUND_MAX_RETRY_ERROR(6305, "refund.max.retry.error"),
	REFUND_PRE_RANK_INVALID(6306, "refund.previous.rank.invalid"),
	REFUND_SALE_TX_INVALID(6307, "refund.sale.transaction.invalid"),
	REFUND_RECONCILIATION_ERROR(6308, "refund.reconciliation.error"),
	REFUND_TRACKING_INVALID(6309, "refund.tracking.invalid"),
	REFUND_TRACKING_DUPLICATE(6310, "refund.tracking.duplicate"),
	REFUND_PROBE_FAILED(6311, "refund.probe.failed"),
	TSP_GENERIC_ERROR(6500, "tsp.general.error"),
	TSP_INVALID_DATA(6501, "tsp.general.error"),
	TSP_VCODE_INVALID(6502, "tsp.vcode.invalid"),
	TSP_CELL_NUMBER_VERIFIED(6503, "tsp.cellnumber.verified"),
	TSP_TOKEN_NOT_FOUND(6504, "tsp.token.nfound"),
	TSP_MERCHANT_ID_INVALID(6505, "tsp.merchant.invalid"),
	TSP_AMOUNT_INVALID(6506, "tsp.amount.invalid"),
	TSP_BASKETID_INVALID(6507, "tsp.basketid.invalid"),
	WALLET_GENERIC_ERROR(8000, "wallet.general.error"),
	WALLET_INVALID_DATA(8001, "wallet.data.invalid"),
	WALLET_GATEWAY_ERROR(8002, "wallet.gateway.error"),
	WALLET_USER_NOT_FOUND(8011, "wallet.user.nfound"),
	WALLET_USER_INVALID_STATE(8012, "wallet.user.state.invalid"),
	WALLET_USER_EXISTS(8013, "wallet.user.exists"),
	WALLET_FNAME_PERSIAN(8014, "wallet.fname.persian"),
	WALLET_LNAME_PERSIAN(8015, "wallet.lname.persian"),
	WALLET_USER_NOT_ACTIVE(8016, "wallet.user.not.active"),
	WALLET_USER_NOT_EDITABLE(8017, "wallet.user.not.editable"),
	WALLET_NCODE_EXISTS(8018, "wallet.ncode.exists"),
	WALLET_MOBILENO_EXISTS(8019, "wallet.mobileno.exists"),
	WALLET_DOC_NOT_FOUND(8020, "wallet.doc.not.found"),
	WALLET_DOC_EMPTY(8021, "wallet.doc.empty"),
	WALLET_DOC_MAX_SIZE(8022, "wallet.doc.size.max"),
	WALLET_DOC_INVALID_TYPE(8023, "wallet.doc.type.invalid"),
	WALLET_TRANSACTION_ID_NOT_FOUND(8024, "wallet.transaction.id.not.found"),
	WALLET_GW_TRANSACTION_DONE_BEFORE(8102, "wallet.transaction.done.before"),
	WALLET_GW_MERCHANT_INVALID(8103, "wallet.merchant.invalid"),
	WALLET_GW_TRANSACTION_FAILED(8105, "wallet.transaction.failed"),
	WALLET_GW_TRANSACTION_INVALID(8112, "wallet.transaction.invalid"),
	WALLET_GW_AMOUNT_INVALID(8113, "wallet.amount.invalid"),
	WALLET_GW_WALLET_NUMBER_INVALID(8114, "wallet.number.invalid"),
	WALLET_GW_MESSAGE_INVALID(8130, "wallet.message.invalid"),
	WALLET_GW_REQUEST_INVALID(8140, "wallet.request.invalid"),
	WALLET_GW_CREDIT_NOT_ENOUGH(8151, "wallet.credit.not.enough"),
	WALLET_GW_WALLET_INVALID(8156, "wallet.invalid"),
	WALLET_GW_TRANSACTION_NOT_ALLOWED(8158, "wallet.transaction.not.allowed"),
	WALLET_GW_TRANSACTION_SUSPICIOUS(8159, "wallet.transaction.suspicious"),
	WALLET_GW_TRANSACTION_VALUE_MAX(8161, "wallet.transaction.value.max"),
	WALLET_GW_WALLET_LIMITED(8162, "wallet.wallet.limited"),
	WALLET_GW_SECURITY_FAILED(8163, "wallet.security.failed"),
	WALLET_GW_MAIN_TRANSACTION_AMOUNT_INVALID(8164, "wallet.main.transaction.amount.invalid"),
	WALLET_GW_TRANSACTION_COUNT_MAX(8165, "wallet.transaction.count.max"),
	WALLET_GW_MAIN_TRANSACTION_FAILED(8172, "wallet.main.transaction.failed"),
	WALLET_GW_WALLET_INACTIVE(8178, "wallet.inactive"),
	WALLET_GW_WALLET_SIGNOFF(8186, "wallet.signoff"),
	WALLET_GW_TARGET_SWITCH_INACTIVE(8191, "wallet.target.switch.inactive"),
	WALLET_GW_TRANSACTION_ROUTE_FAILED(8192, "wallet.transaction.route.failed"),
	WALLET_GW_TRANSACTION_DUPLICATE(8194, "wallet.transaction.duplicate"),
	WALLET_GW_TRANSACTION_SYSTEM_FAILURE(8196, "wallet.system.failure"),
	WALLET_GW_OTHER(8199, "wallet.gw.other"),
	WALLET_BIZ_NAME_EXISTS(8200, "wallet.biz.name.exists"),
	GATEWAY_SHOULD_ACCEPT_TAC(7001, "gateway.tac.accept"),
	GATEWAY_SHOULD_VERIFY_DEVICE(7002, "gateway.verify.device"),
	GATEWAY_INVALID_TRACKING_CODE(7003, "gateway.invalid.tracking.code"),
	GATEWAY_UNTRUSTED_CELL_NUMBER(7004, "gateway.untrusted.cell.number"),
	GATEWAY_INVALID_TOKEN(7005, "gateway.invalid.token"),
	GATEWAY_INVALID_ACCOUNT(7006, "gateway.invalid.account"),
	GATEWAY_REPETITIVE_REQUEST(7007, "gateway.repetitive.request"),
	SCORING_GENERIC_ERROR(8500, "scoring.general.error"),
	SCORING_INVALID_DATA(8501, "scoring.general.error"),
	SCORING_POINT_INVALID(8502, "scoring.point.invalid"),
	SCORING_POINT_VALUE_NOT_FOUND(8503, "scoring.point.invalid"),
	SCORING_SPEND_AMOUNT_INVALID(8504, "scoring.amount.invalid"),
	SCORING_CREDIT_NOT_ENOUGH(8505, "scoring.credit.not.enough"),
	SCORING_USER_ID_INVALID(8506, "scoring.general.error"),
	SECURITY_GENERIC_ERROR(8700, "security.general.error"),
	SECURITY_INVALID_DATA(8701, "security.general.error"),
	SECURITY_ENDPOINT_TYPE_INVALID(8702, "security.general.error"),
	SECURITY_ENDPOINT_VALUE_INVALID(8703, "security.general.error"),
	SECURE_STORE_GENERIC_ERROR(8800, "securestore.general.error"),
	SECURE_STORE_INVALID_DATA(8801, "securestore.general.error"),
	SECURE_STORE_CARD_ID_INVALID(8802, "securestore.cardid.invalid"),
	SECURE_STORE_ENCRYPTED_PAN_INVALID(8803, "securestore.general.error"),
	SECURE_STORE_EXPIRATION_DATE_INVALID(8804, "securestore.general.error"),
	SECURE_STORE_SIGNATURE_INVALID(8805, "securestore.signature.invalid"),
	SECURE_STORE_KEY_NOT_FOUND(8806, "securestore.key.not.found"),
	VAULT_GENERIC_ERROR(8850, "vault.general.error"),
	VAULT_INVALID_DATA(8851, "vault.general.error"),
	VAULT_CARD_ID_INVALID(8852, "vault.cardid.invalid"),
	VAULT_ENCRYPTED_PAN_INVALID(8853, "vault.pan.invalid"),
	VAULT_EXPIRATION_DATE_INVALID(8854, "vault.expire.invalid"),
	VAULT_SIGNATURE_INVALID(8855, "vault.signature.invalid"),
	VAULT_REQUEST_FORMAT_INVALID(8856, "vault.request.format.invalid"),
	VAULT_CLIENT_CODE_INVALID(8857, "vault.client.code.invalid"),
	VAULT_CARD_DUPLICATE(8858, "vault.card.duplicate"),
	VAULT_CELL_NUMBER_INVALID(8859, "vault.cell.number.invalid"),
	INVALID_UTILITY_PENALTY(1066, "utility.is.not.penalty.type"),
	CALLER_NOT_READY_TO_PAY(1067, "caller.is.not.ready.to.pay"),
	ONLINE_CUSTOMER_IS_NOT_ACTIVE(1068, ""),
	INVALID_PURCHASE_INITIATOR(1069, "invalid.purchase.initiator"),
	UNVERIFIED_CELL_NUMBER(1070, "unverified.cell.number"),
	EXCEEDED_RETRY_TIME(1071, "max.retry.time.exceeded"),
	TRANSFORM_EXCEPTION(1072, "transform.message"),
	FORBIDDEN_REQUEST(2003, "forbidden.request"),
	USER_NOT_ACTIVE(1073, "user.not.active"),
	RESERVATION_BALANCE_MAX_EXCEEDED(1074, "reservation.balance.max.exceeded"),
	UTILITY_BILL_TYPE_MISMATCH(1075, "utility.bill.type.mismatch"),
	DEFAULT_ACCOUNT_CANNOT_DEACIVATE(1078, "default.account.cannot.remove"),
	EMAIL_ALREADY_DEFINED(1079, "email.already.defined"),
	BANK_GENERAL_ERROR(1080, "bank.general.error"),
	INVALID_TYPE(1081, "invalid.type"),
	ILLEGAL_STATUS_TO_VERIFY(1082, "illegal.status.to.verify"),
	PURCHASE_ALREADY_FAILED(1083, "purchase.already.failed.to.verify"),
	INVALID_INSURER_CODE(1084, "core.invalid.insurer.code"),
	INSURANCE_CODE_NOT_FOUND(1085, "core.insurance.code.not.found"),
	INCOMPATIBLE_INSURER_NATIONAL_CODE(1086, "core.incompatible.insurer.and.national.code"),
	INSURANCE_INSTALLMENT_NOT_FOUND(1087, "core.insurance.installment.not.found"),
	MAX_EXCEEDED_DEBTOR_NEED_LEVEL_2(1092, "core.cap.max.exceeded.debtor.need.level.2"),
	DEVICE_INVALID_SMS_TOKEN(1089, "core.device.sms.token.is.invalid"),
	DEVICE_SMS_TOKEN_NOT_FOUND(1090, "core.device.sms.token.not.found"),
	MAX_EXCEEDED_CREDITOR_NEED_LEVEL_2(1091, "core.cap.max.exceeded.creditor.need.level.2"),
	MAX_EXCEEDED_DEBTOR_NEED_LEVEL_3(1088, "core.cap.max.exceeded.debtor.need.level.3"),
	MAX_EXCEEDED_CREDITOR_NEED_LEVEL_3(1093, "core.cap.max.exceeded.creditor.need.level.3"),
	MAX_EXCEEDED_DEBTOR_NEED_LEVEL_4(1094, "core.cap.max.exceeded.debtor.need.level.4"),
	MAX_EXCEEDED_CREDITOR_NEED_LEVEL_4(1095, "core.cap.max.exceeded.creditor.need.level.4"),
	INVALID_USER_LEVEL(1096, "core.invalid.user.level"),
	VERIFICATION_ERROR(1097, "core."),
	ACTIVITY_NOT_FOUND(1098, "core.activity.not.found"),
	IPG_SERVICE_NOT_AVAILABLE(1099, "ipg.service.not.available"),
	PURMG_PURCHASE_NOT_FOUND(9000, "core.purchase.not.found"),
	PURMG_INVALID_PURCHASE_TICKET(9001, "purchase.invalid.ticket"),
	PURMG_PURCHASE_ALREADY_CONFIRMED(9002, "core.purchase.already.confirmed"),
	PURMG_PURCHASE_EXPIRED(9003, "purchase.expired"),
	PURMG_PURCHASE_IN_PROGRESS(9004, "purchase.in.progress"),
	PURMG_PURCHASE_NOT_ELIGIBLE_TO_PAY(9005, "purchase.not.eligible.to.pay"),
	PURMG_ROUTE_TO_IPG_FAILED(9006, "purchase.route.to.ipg.failed"),
	PURMG_PURCHASE_PAY_FAILED(9007, "purchase.pay.failed"),
	PURMG_PURCHASE_INTEGRITY_VIOLATION(9008, "purchase.integrity.violation"),
	PURMG_PURCHASE_VERIFY_WINDOW_PASSED(9009, "purchase.verify.window.passed"),
	PURMG_VERIFICATION_FAILED(9010, "purchase.verify.failed"),
	PURMG_VERIFICATION_UNKNOWN(9011, "purchase.verify.unknown"),
	PURMG_INVALID_PURCHASE_STATUS(9012, "purchase.invalid.purchase.status"),
	PURMG_REFUND_LIMIT_EXCEED(9013, "purchase.refund.limit.exceed"),
	PURMG_REFUND_NOT_FOUND(9014, "purchase.refund.not.found"),
	PURMG_REFUND_INTEGRITY_VIOLATION(9015, "refund.integrity.violation"),
	PURMG_TEMPLATE_NOT_FOUND(9016, "purchase.template.not.found"),
	PURMG_TEMPLATE_VIOLATED(9017, "purchase.template.violated"),
	PURMG_SETTINGS_UPDATE_FAILED(9018, "purchase.settings.update.failed"),
	PURMG_SETTINGS_NOT_FOUND(9019, "purchase.settings.not.found"),
	PURMG_INQUIRY_NOT_APPLIED(9020, "purchase.inquiry.not.applied"),
	USERMG_INAPP_TOKEN_INVALID(9501, "in.app.token.invalid"),
	USERMG_INAPP_SMS_CODE_INVALID(9502, "in.app.sms.code.invalid"),
	USER_ID_DEVICE_ID_NOT_MATCH(9503, "user_id_device_id_not_match"),
	SWCH_PSP_VERIFICATION_FAILED(9050, "psp.verification.error"),
	SWCH_PSP_VERIFICATION_SUCCESS(9051, "psp.verification.success"),
	SWCH_PSP_VERIFICATION_UNKNOWN(9051, "psp.verification.unknown"),
	SWCH_PSP_TRACK_DUPLICATE(9053, "psp.track.code.duplicate"),
	SWCH_PSP_TRACK_NOT_FOUND(9054, "psp.track.code.not.found"),
	SWCH_PSP_DUPLICATE_TERMINAL(9055, "psp.duplicate.terminal"),
	BANKPROXY_BAD_RESPONSE(10000, "bankproxy.bad.response"),
	BANKPROXY_INVALID_DIGITAL_SIGNATURE(10001, "bankproxy.generic.error"),
	BANKPROXY_BANK_UNKNOWN_ERROR(10002, "bankproxy.generic.error"),
	BANKPROXY_TIMEOUT_ERROR(10003, "bankproxy.timeout.error"),
	BANKPROXY_SERVER_ERROR(10011, "bankproxy.server.error"),
	BANKPROXY_ACCESS_ERROR(10017, "bankproxy.access.error"),
	BANKPROXY_PAN_INVALID(10004, "bankproxy.pan.invalid"),
	BANKPROXY_PASSWORD_INVALID(10005, "bankproxy.password.invalid"),
	BANKPROXY_PIN2_INVALID(10006, "bankproxy.pin2.invalid"),
	BANKPROXY_PASS_ATTEMPT_REACHED(10007, "bankproxy.pass-attempt.reached"),
	BANKPROXY_PASS_ATTEMPT_WARN(10008, "bankproxy.pass-attempt.warn"),
	BANKPROXY_CCV2_INVALID(10009, "bankproxy.ccv2.invalid"),
	BANKPROXY_EXPIRE_DATE_INVALID(10010, "bankproxy.expire-date.invalid"),
	BANKPROXY_CONNECT_ERROR(10012, "bankproxy.connect.error"),
	BANKPROXY_AMOUNT_INVALID(10013, "bankproxy.amount.invalid"),
	BANKPROXY_CARD_INVALID(10014, "bankproxy.card.invalid"),
	BANKPROXY_CREDIT_NOT_ENOUGH(10015, "bankproxy.credit.not-enough"),
	BANKPROXY_CARD_TRANSFER_AMOUNT_EXCEEDED(10016, "bankproxy.card.transfer.amount.exceeded"),
	BANKPROXY_SERVICE_NOT_AVAILABLE(10017, "bankproxy.service.not.available"),
	BANKPROXY_INVALID_TARGET(10018, "bankproxy.invalid.target"),
	BANKPROXY_SAME_SOURCE_TARGET(10019, "bankproxy.same.source.target"),
	BANKPROXY_CARD_INACTIVE(10020, "bankproxy.card.inactive"),
	BANKPROXY_CARD_ISSUER_INACTIVE(10021, "bankproxy.card.issuer.inactive"),
	BANKPROXY_CARD_NOT_FOUND(10022, "bankproxy.card.not.found"),
	BANKPROXY_TRANSACTION_INVALID(10023, "bankproxy.transaction.invalid"),
	BANKPROXY_TRANSACTION_NOT_ALLOWED(10024, "bankproxy.transaction.not.allowed"),
	BANKPROXY_ENDOFDAY_ERROR(10025, "bankproxy.endofday.error"),
	BANKPROXY_FORMAT_ERROR(10026, "bankproxy.format.error"),
	BANKPROXY_ACCOUNT_INVALID(10027, "bankproxy.account.invalid"),
	BANKPROXY_REQUIRED_DATA_ERROR(10028, "bankproxy.required.data.invalid"),
	BANKPROXY_CELL_NOT_FOUND(10029, "bankproxy.cell.not.found"),
	BANKPROXY_BANK_CODE_INVALID(10030, "bankproxy.bank.code.invalid"),
	BANKPROXY_TRACKING_INVALID(10031, "bankproxy.tracking.invalid"),
	BANKPROXY_CARD_TRANSFER_FAILED(10032, "bankproxy.card.transfer.failed"),
	BANKPROXY_REQUIRED_CELL_NUMBER(10033, "bankproxy.required.cell.number"),
	BANKPROXY_REQUIRED_SOURCE_PAN(10034, "bankproxy.required.source.pan"),
	BANKPROXY_REQUIRED_PIN(10035, "bankproxy.required.pin"),
	BANKPROXY_REQUIRED_CVV2(10036, "bankproxy.required.cvv2"),
	BANKPROXY_REQUIRED_EXPIRE_DATE(10037, "bankproxy.required.expire.date"),
	BANKPROXY_REQUIRED_TARGET_PAN(10038, "bankproxy.required.target.pan"),
	BANKPROXY_REQUIRED_BANK_NAME(10039, "bankproxy.required.bank.name"),
	BANKPROXY_INVALID_BANK_NAME(10040, "bankproxy.invalid.bank.name"),
	BANKPROXY_FAILED_OPERATION(10041, "bankproxy.failed.operation"),
	BANKPROXY_INVALID_CVV2(10042, "bankproxy.invalid.cvv2"),
	BANKPROXY_INVALID_EXPIRE_DATE(10043, "bankproxy.invalid.expire.date"),
	BANKPROXY_INVALID_PIN(10044, "bankproxy.invalid.pin"),
	BANKPROXY_INVALID_IBAN(10045, "bankproxy.invalid.iban"),
	BANKPROXY_REQUIRED_IBAN(10046, "bankproxy.required.iban"),
	BANKPROXY_REQUIRED_NATIONAL_CODE(10047, "bankproxy.required.national.code"),
	BANKPROXY_INVALID_NATIONAL_CODE(10048, "bankproxy.invalid.national.code"),
	BANKPROXY_MANDATORY_FIELD_MISSING(10049, "bankproxy.mandatory-field.missing"),
	BANKPROXY_MISSING_CUSTOMER_INFORMATION(10050, "bankproxy.missing.customer.information"),
	BANKPROXY_INVALID_FACTOR(10051, "bankproxy.invalid.factor"),
	BANKPROXY_VIOLATED_SATNA_RESTRICTIONS(10052, "bankproxy.violated.satna.restrictions"),
	BANKPROXY_REQUIRED_DISTINCT_IBAN_BANK(10053, "bankproxy.required.distinct.iban.bank"),
	BANKPROXY_CARD_IS_LIMITED(10054, "bankproxy.card.is.limited"),
	BANKPROXY_INVALID_CARD_ISSUER(10055, "bankproxy.invalid.card.issuer"),
	BANKPROXY_DUPLICATE_TRANSACTION(10056, "bankproxy.duplicate.transaction"),
	BANKPROXY_REQUIRED_CLIENT_HEADERS(10057, "bankproxy.required.client.headers"),
	BANKPROXY_VALIDATION_EXCEPTION(10058, "bankproxy.validation.exception"),
	FILE_NOT_FOUND(3000, "file.not.found"),
	TOP_UP_OPERATOR_PREFIX_NOT_FOUND(4000, "core.top.up.operator.prefix.not.found"),
	ACCOUNT_BANK_NOT_FOUND(4051, "acct.bank.not.found"),
	ACCOUNT_UNSUPPORTED_TYPE_FOUND(4052, "acct.unsupported.type.found"),
	SWCH_BANK_INVALID_CARD_INFO(5051, "swch.bank.invalid.card.info"),
	SWCH_BANK_SERVICE_NOT_AVAILABLE(5052, "swch.bank.service.not.available"),
	SWCH_BANK_INVALID_TARGET(5053, "swch.bank.invalid.target"),
	SWCH_BANK_INVALID_PAN(5054, "swch.bank.invalid.pan"),
	SWCH_BANK_CARD_EXPIRED(5055, "swch.bank.card.expired"),
	SWCH_BANK_SAME_SOURCE_TARGET(5056, "swch.bank.same.source.target"),
	SWCH_BANK_CARD_INACTIVE(5057, "swch.bank.card.inactive"),
	SWCH_BANK_CARD_ISSUER_INACTIVE(5058, "swch.bank.card.issuer.inactive"),
	SWCH_BANK_CARD_NOT_FOUND(5059, "swch.bank.card.not.found"),
	SWCH_BANK_INVALID_PASSWORD(5060, "swch.bank.invalid.password"),
	SWCH_BANK_INTERNAL_ERROR(5062, "swch.bank.internal.error"),
	SWCH_BANK_CREDIT_NOT_ENOUGH(5063, "swch.bank.credit.not.enough"),
	SWCH_BANK_CLIENT_DUPLICATE(5064, "swch.bank.client.already.exists"),
	SWCH_BANK_NOT_FOUND(5065, "swch.bank.not.found"),
	SWCH_BANK_CLIENT_NOT_FOUND(5066, "swch.bank.client.not.found"),
	GENERAL_LEDGER_GENERIC_ERROR(5101, "general.ledger.generic.error"),
	GENERAL_LEDGER_UNKNOWN_ERROR(5102, "general.ledger.unknown.error"),
	GENERAL_LEDGER_VOUCHER_NOT_FOUND(5103, "general.ledger.voucher.not.found"),
	VLT_COORD_SERVER_ERROR(10100, "vlt.coord.server.error"),
	VLT_COORD_CLIENT_UNKNOWN_ERROR(10102, "vlt.coord.generic.error"),
	VLT_COORD_TIMEOUT_ERROR(10103, "vlt.coord.timeout.error"),
	VLT_COORD_INVALID_BANK(10104, "vlt.coord.invalid.bank"),
	VLT_COORD_CARD_PARTIAL_STORE_FAILURE(10105, "vlt.coord.card.partial.store.failure"),
	BILL_INQUIRY_OPERATOR_NOT_SUPPORTED(9100, "bill.inquiry.operator.not.supported"),
	BILL_TOLL_NOT_FOUND(9101, "toll.not.found"),
	BILL_TOLL_UNAVAILABLE_PAY_OFF_SERVICE(9102, "toll.unavailable.pay.off"),
	USER_SCHEDULER_NOT_FOUND(9201, "user.scheduler.not.found"),
	EXPIRE_DATE_HAS_PASS_EXCEPTION(9301, "notification.expire.date.has.pass.exception"),
	PAYOUT_IN_PROGRESS(10200, "payout.in.progress"),
	PAYOUT_INTERNAL_ERROR(10201, "payout.internal.error"),
	PAYOUT_NOT_FOUND(10202, "payout.not-found"),
	PAYOUT_DAILY_AMOUNT_EXCEEDED(10203, "payout.daily.amount.exceeded"),
	PAYOUT_INSUFFICIENT_BALANCE(10204, "payout.insufficient.balance"),
	PAYOUT_MAXIMUM_AMOUNT_PER_TRANSACTION_EXCEEDED(10205, "payout.maximum.amount.per.transaction.exceeded");

	private final String description;
	private final Integer status;
	private Properties errorMessageProperties;

	private ResultStatus(Integer status, String description) {
		this.populateConfigProperty();
		this.status = status;
		String errorMsg = this.errorMessageProperties.getProperty(description);
		if (errorMsg != null) {
			this.description = errorMsg;
		} else {
			this.description = description;
		}

	}

	private void populateConfigProperty() {
		try {
			this.errorMessageProperties = new Properties();
			this.errorMessageProperties.load(this.getClass().getResourceAsStream("/errormsg.properties"));
		} catch (IOException var2) {
			var2.printStackTrace();
		}

	}

	public String getDescription() {
		return this.description;
	}

	public Integer getStatus() {
		return this.status;
	}
}
